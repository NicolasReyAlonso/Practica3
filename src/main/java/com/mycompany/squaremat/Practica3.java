package com.mycompany.squaremat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Nicolas, Ayose
 */
public class Practica3 extends javax.swing.JFrame {

    /**
     * Creates new form Practica3
     */
    SquareMatrix a = new SquareMatrix(10,0,0);
    SquareMatrix history [] = new SquareMatrix[2];
    double minimo = 0;
    double maximo = 0;
    double max;
    double min;
    
    public Practica3() {
        history[0] = new SquareMatrix(10,0,0);;
        history[1] = new SquareMatrix(10,0,0);;
        initComponents();
        BarraMinimo.setMaximum(0);
        BarraMinimo.setMinimum(0);
        BarraMinimo.setMajorTickSpacing(10);
        BarraMinimo.setMinorTickSpacing(5);
        BarraMinimo.setPaintTicks(true);
        BarraMinimo.setPaintLabels(true);
        BarraMaximo.setMaximum(0);
        BarraMaximo.setMinimum(0);
        BarraMaximo.setMajorTickSpacing(10);
        BarraMaximo.setMinorTickSpacing(5);
        BarraMaximo.setPaintTicks(true);
        BarraMaximo.setPaintLabels(true);
        AreaText.setEditable(false);
        Hist.setEditable(false);
        Hist1.setEditable(false);
        Maximo.setText("0");
        Minimo.setText("0");
        Hist.setText(history[0].toString());
        Hist1.setText(history[1].toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BarraMinimo = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BarraMaximo = new javax.swing.JSlider();
        Minimo = new javax.swing.JTextField();
        Maximo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        History2 = new javax.swing.JScrollPane();
        Hist = new javax.swing.JTextArea();
        History1 = new javax.swing.JScrollPane();
        Hist1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Config"));

        BarraMinimo.setToolTipText("No hace nada");
        BarraMinimo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BarraMinimoStateChanged(evt);
            }
        });

        jLabel1.setText("Mínimo Visible");

        jLabel2.setText("Máximo Visible");

        BarraMaximo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BarraMaximoStateChanged(evt);
            }
        });

        Minimo.setText("jTextField1");
        Minimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinimoActionPerformed(evt);
            }
        });

        Maximo.setText("jTextField2");
        Maximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaximoActionPerformed(evt);
            }
        });

        jLabel3.setText("Maximo Valor");

        jLabel4.setText("Minimo Valor");

        Hist.setColumns(20);
        Hist.setRows(5);
        Hist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HistMouseClicked(evt);
            }
        });
        History2.setViewportView(Hist);

        Hist1.setColumns(20);
        Hist1.setRows(5);
        Hist1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Hist1MouseClicked(evt);
            }
        });
        History1.setViewportView(Hist1);

        jLabel5.setText("Historial");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Minimo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(Maximo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(BarraMaximo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BarraMinimo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(History1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(History2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Minimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Maximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BarraMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BarraMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(History2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(History1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        AreaText.setColumns(20);
        AreaText.setRows(5);
        jScrollPane1.setViewportView(AreaText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BarraMinimoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BarraMinimoStateChanged
        // TODO add your handling code here:
        int value = BarraMinimo.getValue();
        min = value;
        BarraMaximo.setMaximum((int)maximo);
        BarraMaximo.setMinimum((int)min);
        BarraMaximo.setMajorTickSpacing((int)(maximo - minimo/10));
        BarraMaximo.setMinorTickSpacing((int)(maximo - minimo/20));
        AreaText.setText(a.toString((int)min, (int)max));
    }//GEN-LAST:event_BarraMinimoStateChanged

    private void BarraMaximoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BarraMaximoStateChanged
        // TODO add your handling code here:
        int value = BarraMaximo.getValue();
        max = value;
        BarraMinimo.setMaximum((int)max);
        BarraMinimo.setMinimum((int)minimo);
        BarraMinimo.setMajorTickSpacing((int)(maximo - minimo/10));
        BarraMinimo.setMinorTickSpacing((int)(maximo - minimo/20));
        AreaText.setText(a.toString((int)min, (int)max));
    }//GEN-LAST:event_BarraMaximoStateChanged

    private void MinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinimoActionPerformed
        // TODO add your handling code here:
        try{
            minimo = Double.parseDouble(Minimo.getText());
            if (maximo < minimo){
                maximo = minimo + 1;
                Maximo.setText(maximo + "");
            }
            BarraMaximo.setMaximum((int)maximo);
            BarraMaximo.setMinimum((int)minimo);
            BarraMaximo.setValue((int)maximo);
            BarraMinimo.setValue((int)minimo);
            BarraMaximo.setMajorTickSpacing((int)(maximo - minimo/((maximo - minimo)/10)));
            BarraMaximo.setMinorTickSpacing((int)(maximo - minimo/((maximo - minimo)/20)));
            
            BarraMinimo.setMaximum((int)maximo);
            BarraMinimo.setMinimum((int)minimo);
            BarraMaximo.setValue((int)maximo);
            BarraMinimo.setValue((int)minimo);
            BarraMinimo.setMajorTickSpacing((int)(maximo - minimo/((maximo - minimo)/10)));
            BarraMinimo.setMinorTickSpacing((int)(maximo - minimo/((maximo - minimo)/20)));
            
            history[1] = history[0];
            history[0] = a;
            a = new SquareMatrix(10, minimo, maximo);
            Hist.setText(history[0].toString());
            Hist1.setText(history[1].toString());
            AreaText.setText(a.toString((int)minimo,(int) maximo));
        }catch (Exception a){
            AreaText.setText("Debe introducir un numero");
        }
    }//GEN-LAST:event_MinimoActionPerformed

    private void MaximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaximoActionPerformed
        // TODO add your handling code here:
        try{
            maximo = Double.parseDouble(Maximo.getText());
            if (maximo < minimo){
                maximo = minimo + 1;
                Maximo.setText(maximo + "");
            }
            
            BarraMinimo.setMaximum((int)maximo);
            BarraMinimo.setMinimum((int)minimo);
            BarraMaximo.setValue((int)maximo);
            BarraMinimo.setValue((int)minimo);
            BarraMinimo.setMajorTickSpacing((int)(maximo - minimo/((maximo - minimo)/10)));
            BarraMinimo.setMinorTickSpacing((int)(maximo - minimo/((maximo - minimo)/20)));
            
            BarraMaximo.setMaximum((int)maximo);
            BarraMaximo.setMinimum((int)minimo);
            BarraMaximo.setValue((int)maximo);
            BarraMinimo.setValue((int)minimo);
            BarraMaximo.setMajorTickSpacing((int)(maximo - minimo/((maximo - minimo)/10)));
            BarraMaximo.setMinorTickSpacing((int)(maximo - minimo/((maximo - minimo)/20)));
            
            history[1] = history[0];
            history[0] = a;
            a = new SquareMatrix(10, minimo, maximo);
            AreaText.setText(a.toString((int)minimo,(int) maximo));
            Hist.setText(history[0].toString());
            Hist1.setText(history[1].toString());
        }catch (Exception a){
            AreaText.setText("Debe introducir un numero");
        }
    }//GEN-LAST:event_MaximoActionPerformed

    private void Hist1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Hist1MouseClicked
        // TODO add your handling code here:
        SquareMatrix b = a;
        a = history[1];
        history[1] = b;
        minimo = a.getMin();
        maximo = a.getMax();
        BarraMaximo.setMaximum((int)maximo);
        BarraMaximo.setMinimum((int)minimo);
            BarraMaximo.setValue((int)maximo);
            BarraMinimo.setValue((int)minimo);
            BarraMaximo.setMajorTickSpacing((int)(maximo - minimo/((maximo - minimo)/10)));
            BarraMaximo.setMinorTickSpacing((int)(maximo - minimo/((maximo - minimo)/20)));
            
            BarraMinimo.setMaximum((int)maximo);
            BarraMinimo.setMinimum((int)minimo);
            BarraMaximo.setValue((int)maximo);
            BarraMinimo.setValue((int)minimo);
            BarraMinimo.setMajorTickSpacing((int)(maximo - minimo/((maximo - minimo)/10)));
            BarraMinimo.setMinorTickSpacing((int)(maximo - minimo/((maximo - minimo)/20)));
        AreaText.setText(a.toString((int)minimo,(int) maximo));
        Hist1.setText(history[1].toString());
        
        
    }//GEN-LAST:event_Hist1MouseClicked

    private void HistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistMouseClicked
        // TODO add your handling code here:
        SquareMatrix b = a;
        a = history[0];
        history[0] = b;
        minimo = a.getMin();
        maximo = a.getMax();
        BarraMaximo.setMaximum((int)maximo);
        BarraMaximo.setMinimum((int)minimo);
            BarraMaximo.setValue((int)maximo);
            BarraMinimo.setValue((int)minimo);
            BarraMaximo.setMajorTickSpacing((int)(maximo - minimo/((maximo - minimo)/10)));
            BarraMaximo.setMinorTickSpacing((int)(maximo - minimo/((maximo - minimo)/20)));
            
            BarraMinimo.setMaximum((int)maximo);
            BarraMinimo.setMinimum((int)minimo);
            BarraMaximo.setValue((int)maximo);
            BarraMinimo.setValue((int)minimo);
            BarraMinimo.setMajorTickSpacing((int)(maximo - minimo/((maximo - minimo)/10)));
            BarraMinimo.setMinorTickSpacing((int)(maximo - minimo/((maximo - minimo)/20)));
        AreaText.setText(a.toString((int)minimo,(int) maximo));
        Hist.setText(history[0].toString());
    }//GEN-LAST:event_HistMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaText;
    private javax.swing.JSlider BarraMaximo;
    private javax.swing.JSlider BarraMinimo;
    private javax.swing.JTextArea Hist;
    private javax.swing.JTextArea Hist1;
    private javax.swing.JScrollPane History1;
    private javax.swing.JScrollPane History2;
    private javax.swing.JTextField Maximo;
    private javax.swing.JTextField Minimo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
